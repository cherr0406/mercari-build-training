@import url('https://fonts.googleapis.com/css2?family=Nunito+Sans:ital,opsz,wght@0,6..12,200..1000;1,6..12,200..1000&family=Nunito:ital,wght@0,200..1000;1,200..1000&display=swap');

:root {
  --font-color: 255, 255, 255;
  --font-color-black: 51, 51, 51;
  --background-color: 64, 145, 205;
  --background-hover-color: 255, 226, 122;
  --primary-color: 255, 206, 0;
  --secondary-color: 245, 250, 254;
  * {
    box-sizing: border-box;
    margin: 0;
    padding: 0;
    font-family: 'Nunito Sans', sans-serif;
    font-optical-sizing: auto;
    color: rgb(var(--font-color));
  }
  a {
    text-decoration: none;
  }
}

html,
body {
  height: 100%;
}
button {
  cursor: pointer;
}

.App {
  text-align: center;
  min-height: 100vh;
  background-color: rgb(var(--background-color));
}

.Title {
  min-height: 8vh;
  display: flex;
  flex-direction: column;
  align-items: center;
  justify-content: left;
  padding: 1em;
}
.Title h1 {
  font-size: calc(48px + 1vmin);
  font-weight: 900;
  color: white;
  letter-spacing: 0.2rem;
  text-shadow: 3px 3px 0 rgb(var(--primary-color));
  -webkit-text-stroke: 1.5px #fff;
  text-stroke: 1.5px #fff;
  color: transparent;
  padding: 0 0 10px;
}

.Main {
  max-width: 1100px;
  width: 100%;
  height: 100%;
  display: flex;
  flex-direction: column;
  align-items: center;
  margin: 5vh auto;
  gap: 10vh;
}

.Listing {
  display: flex;
  flex-direction: column;
  align-items: center;
  justify-content: left;
  font-size: calc(10px + 1vmin);
  width: 80%;
  padding: 1rem 0;
  border-bottom: dashed 2px white;
  border-top: dashed 2px white;
}

.Listing details {
  width: 100%;
  text-align: left;
}
.Listing summary {
  cursor: pointer;
  width: fit-content;
  font-size: 1.3rem;
}

.ListingForm {
  display: flex;
  flex-direction: row;
  width: 100%;
  gap: 1px;
  padding-top: 1em;
}

.ListingInput {
  display: grid;
  grid-template-columns: 1fr 1fr;
  width: 100%;
  column-gap: 1px;
  row-gap: 3px;
}

.ListingForm input[type='text'] {
  font-size: 1.5rem;
  height: 1.5em;
  border: none;
  border-radius: 2px;
  width: 100%;
  padding: 0 1rem;
  background-color: rgb(var(--secondary-color));
  color: rgb(var(--font-color-black));
}

.ListingFile {
  display: flex;
  grid-column: 1 / 3;
  align-items: center;
}
.ListingFileButton {
  padding: 0 1rem;
  height: 2em;
  background-color: rgb(var(--secondary-color));
  color: rgb(var(--font-color-black));
  border: none;
  width: 10em;
  min-width: 10em;
}
.ListingFile input[type='file'] {
  display: none;
}
.ListingFile p {
  padding: 0 1rem;
  text-align: center;
  font-size: 1rem;
  overflow: hidden;
  white-space: nowrap;
  text-overflow: ellipsis;
}

.ListingSubmitButton {
  background-color: rgb(var(--primary-color));
  color: rgb(var(--font-color-black));
  font-size: 1.2rem;
  font-weight: bold;
  padding: 0 0.5em;
  margin-left: 1em;
  min-width: 9em;
  border: none;
  border-radius: 10em;
}

.ShineAnime {
  position: relative;
  display: inline-block;
  overflow: hidden;
}

.ShineAnime::before {
  content: '';
  position: absolute;
  top: 0;
  left: -75%;
  width: 50%;
  height: 100%;
  background: linear-gradient(
    to right,
    rgba(255, 255, 255, 0) 0%,
    rgba(255, 255, 255, 0.3) 100%
  );
  transform: skewX(-25deg);
}
.ShineAnime:hover::before {
  animation: shine 0.7s;
}
@keyframes shine {
  100% {
    left: 125%;
  }
}

.ItemList-Wrapper {
  display: grid;
  grid-template-columns: 1fr 1fr 1fr;
  column-gap: 2em;
  row-gap: 0;
  width: 100%;
}

.ItemContainer {
  position: relative;
  width: 100%;
  aspect-ratio: 1;
}
.ItemContainer:nth-child(3n + 2) {
  margin-top: 8vh;
  margin-bottom: 0;
}
.ItemContainer:hover {
  transform: scale(1.1);
  z-index: 2;
  transition: 0.2s ease;
}

.ItemList {
  position: absolute;
  display: grid;
  grid-template-columns: 1fr 1fr 1fr 1fr 1fr;
  grid-auto-rows: 1fr;
  gap: 7%;
  width: calc(100% - 1em);
  height: calc(100% - 1em);
  font-size: calc(10px + 1vmin);
  margin-bottom: 8vh;
  padding: 6%;
  aspect-ratio: 1;
  border-radius: 40%;
  background-color: rgb(var(--secondary-color));
  cursor: pointer;
}

.ItemList.ItemBg {
  overflow: hidden;
  grid-template-columns: 1fr 1fr 1fr 1fr;
  top: 0.5em;
  left: 1em;
  background-color: rgb(var(--primary-color));
}

.ItemList * {
  color: rgb(var(--font-color-black));
  background-color: transparent;
}

.ItemList img {
  grid-column: 1 / 4;
  grid-row: 1 / 2;
  width: 100%;
  object-fit: cover;
  aspect-ratio: 1 / 1;
  border-radius: 10px;
}

.ItemList .ItemName {
  grid-column: 1 / 6;
  grid-row: 2 / 3;
  width: 100%;
  font-weight: bold;
  font-style: italic;
  display: flex;
  flex-direction: column;
  justify-content: center;
  text-align: center;
  padding: 0 1.5rem 1rem;
  text-align: left;
  font-size: 1.5rem;
}
.ItemList .ItemName span:nth-child(2) {
  padding-left: 1rem;
  overflow: hidden;
  white-space: nowrap;
  text-overflow: ellipsis;
  text-align: center;
  font-size: 2rem;
}

.ItemList .ItemCategory {
  grid-column: 3 / 5;
  grid-row: 1 / 2;
  position: relative;
  border-radius: 0;
  width: 130%;
  height: 2em;
  rotate: 330deg;
  background-color: rgb(var(--primary-color));
  top: 32%;
  display: flex;
  overflow: hidden;
  z-index: 1;
}
.ItemList .ItemCategory::after {
  content: '';
  position: absolute;
  top: 50%;
  left: 6.5em;
  height: 50%;
  aspect-ratio: 1;
  border-radius: 50%;
  background-color: rgb(var(--background-color));
  transform: translate(0, -50%);
}
.ItemList .ItemCategory span {
  font-family: 'Nunito Sans';
  font-size: 2em;
  font-weight: bold;
  height: 100%;
  color: rgb(var(--background-color));
}

.CircleAnimeTarget {
  position: relative;
}
.CircleAnimeBase:hover .CircleAnimeTarget::before {
  content: '';
  position: absolute;
  right: 30%;
  top: 30%;
  border: 1px solid rgb(var(--background-color));
  height: 60px;
  aspect-ratio: 1;
  border-radius: 50%;
  opacity: 1;
  animation: 1s circle forwards;
  z-index: 1;
  transform: translate(0, -50%);
}

@keyframes circle {
  0% {
    transform: scale(0);
  }
  100% {
    transform: scale(2);
    opacity: 0;
  }
}

.App-link {
  color: #61dafb;
}

@keyframes App-logo-spin {
  from {
    transform: rotate(0deg);
  }
  to {
    transform: rotate(360deg);
  }
}
